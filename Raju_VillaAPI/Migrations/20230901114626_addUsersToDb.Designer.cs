// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Raju_VillaAPI.Data;

#nullable disable

namespace Raju_VillaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230901114626_addUsersToDb")]
    partial class addUsersToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Raju_VillaAPI.Models.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalUsers");
                });

            modelBuilder.Entity("Raju_VillaAPI.Models.Villas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sq")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("villass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "",
                            CreatedDate = new DateTime(2023, 9, 1, 17, 16, 26, 75, DateTimeKind.Local).AddTicks(6734),
                            Details = "This exquisite villa is nestled along the pristine shores of Malibu, California, offering breathtaking ocean views from every room. ",
                            ImageUrl = "https://media.istockphoto.com/id/1177798051/photo/modern-house-with-terrace-and-a-swimming-pool.jpg?s=612x612&w=is&k=20&c=HOSI3bLneTix9-nZnGrd0TlDFAE-erolwhen6PjxBiw=",
                            Name = "RoyalVilla",
                            Occupancy = 4,
                            Rate = 200.0,
                            Sq = 500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "",
                            CreatedDate = new DateTime(2023, 9, 1, 17, 16, 26, 75, DateTimeKind.Local).AddTicks(6749),
                            Details = "Located in the heart of the Tuscan countryside, this charming villa exudes old-world charm with its terracotta roof, lush vineyards, and olive groves. ",
                            ImageUrl = "https://media.istockphoto.com/id/1177798051/photo/modern-house-with-terrace-and-a-swimming-pool.jpg?s=612x612&w=is&k=20&c=HOSI3bLneTix9-nZnGrd0TlDFAE-erolwhen6PjxBiw=",
                            Name = "QueenVilla",
                            Occupancy = 4,
                            Rate = 200.0,
                            Sq = 500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "",
                            CreatedDate = new DateTime(2023, 9, 1, 17, 16, 26, 75, DateTimeKind.Local).AddTicks(6751),
                            Details = "Situated in the prestigious Emirates Hills, this ultramodern villa boasts sleek, cutting-edge design and smart home automation.",
                            ImageUrl = "https://photos.homerez.com/v7/_S3-photos_/41250449/E1sXLAlrTsrlPvid26kYBnMIofmloaQRMMQP8WKea/url.jpg?h=800&optipress=2",
                            Name = "PrinceVilla",
                            Occupancy = 4,
                            Rate = 200.0,
                            Sq = 500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
